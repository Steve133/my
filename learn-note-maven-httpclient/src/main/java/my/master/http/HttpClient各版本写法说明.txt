HttpClient版本说明
摘自https://blog.csdn.net/u011191463/article/details/78664896/	

3.X超时写法：
	HttpClient client = new HttpClient();
	client.setConnectionTimeout(30000); 
	client.setTimeout(30000);
	或者
	HttpClient httpClient= new HttpClient(); 
	httpClient.getHttpConnectionManager().getParams().setConnectionTimeout(5000);
4.0-4.2超时写法(4.3后过时)：
	HttpClient httpClient=new DefaultHttpClient();
	httpClient.getParams().setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,2000);//连接时间
	httpClient.getParams().setParameter(CoreConnectionPNames.SO_TIMEOUT,2000);//数据传输时间
4.3-4.4版本超时设置
	CloseableHttpClient httpClient = HttpClients.createDefault();
	HttpGet httpGet=new HttpGet("http://www.baidu.com");//HTTP Get请求(POST雷同)
	RequestConfig requestConfig = RequestConfig.custom().setSocketTimeout(2000).setConnectTimeout(2000).build();//设置请求和传输超时时间
	httpGet.setConfig(requestConfig);
	4.3版本不设置超时的话，一旦服务器没有响应，等待时间N久(>24小时)
	HttpClient升级到4.5版本后，API有很多变化，HttpClient 4之后，API一直没有太稳定，我感觉4.5版本抽象后，很多API应该快稳定了。
4.5版本超时设置
	CloseableHttpClient httpclient = HttpClients.createDefault();  
	HttpGet httpGet = new HttpGet("http://stackoverflow.com/");  
	RequestConfig requestConfig = RequestConfig.custom()  
	        .setConnectTimeout(5000).setConnectionRequestTimeout(1000)  
	        .setSocketTimeout(5000).build();  
	httpGet.setConfig(requestConfig);  
	CloseableHttpResponse response = httpclient.execute(httpGet);  
	System.out.println("得到的结果:" + response.getStatusLine());//得到请求结果  
	HttpEntity entity = response.getEntity();//得到请求回来的数据
	//setConnectTimeout：设置连接超时时间，单位毫秒
	//setConnectionRequestTimeout：设置从connect Manager(连接池)获取Connection 超时时间，单位毫秒。这个属性是新加的属性，因为目前版本是可以共享连接池的。
	//setSocketTimeout：请求获取数据的超时时间(即响应时间)，单位毫秒。 如果访问一个接口，多少时间内无法返回数据，就直接放弃此次调用。