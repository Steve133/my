正则表达式			含义										实例表达式						可正则的字符串

标示字符
.				匹配除了\n以外的字符							a.c							aac abc a1c
\				是特殊字符失去效果							a\.c						a.c
\d				数字[0-9]									a\dc						a1c
\D				非数字[^\d]								a\DC						abc
\s				空字符									a\sc						a c				[\u3000|\u0020|\u00A0]文本空格
\S				非空白字符[^\S]								a\Sc						abc
\w				单词字符[A-Za-z0-9_]						a\wc						abc
\W				非单词字符[^\w]								a\Wc						a c



标示匹配字符方式
[…]				字符集匹配字符中符号失去了特殊含义,除了第一个字符	a[bcd]c						abc acc adc
														a[b-d]c						abc acc adc
				在方括号之内你只能匹配单个字符					a[^bcd]c					aac aec
(…|…)			在圆括号之内你能匹配单个字符多次				a(b|c|d)c					abc abbc



表示匹配次数字符
*				匹配前一个字符,0到无限次						abc*						ab abc abcc abccc 
+				匹配前一个字符,1到无限次						abc+						abc abcc abccc
?				匹配前一个字符,0或1次						abc?						ab abc
				可选匹配									c?
{m}				匹配前一个字符m次							ab{2}c						abbc
{m,n}			匹配前一个字符m到n次N						ab{1,2}c					abc abbc
*?+???{m,n}?	使*+?{m,n}非贪婪模式



“否”符号
[^]				用在方括号内，“^”表示不想要匹配的字符			
[a-z]+			a到z之间任意一个字符


边界匹配	
^				字符串开头 行开头,在[]中是除以外字符
$				字符串结尾 行结尾
\A				字符串开头
\Z				字符串结尾
\b				匹配\w和\W之间
\B				[^\b]
|				左右表达式任意匹配一个
(…)														(abc){2}					Abcabc
														a(123|456)c					A123c


\S*?匹配非空白字符0到无限次
.*	匹配除了\n以外的字符0到无限次
.*?	匹配除了\n以外的字符0到无限次



校验数字的表达式
1 纯数字：			^[0-9]*$	衍生	一段字符中包含数字：^.*[0-9]*$
2 n位的纯数字：		^\d{n}$		衍生	一段字符中包含n位数字：^.*\d{n}$
3 至少n位的数字：		^\d{n,}$
4 m-n位的数字：		^\d{m,n}$
5 零和非零开头的数字：	^(0|[1-9][0-9]*)$
6 非零开头的最多带两位小数的数字：	^([1-9][0-9]*)+(.[0-9]{1,2})?$
7 带1-2位小数的正数或负数：	^(\-)?\d+(\.\d{1,2})?$
8 正数、负数、和小数：	^(\-|\+)?\d+(\.\d+)?$
9 有两位小数的正实数：	^[0-9]+(.[0-9]{2})?$
10 有1~3位小数的正实数：	^[0-9]+(.[0-9]{1,3})?$
11 非零的正整数：	^[1-9]\d*$ 或 ^([1-9][0-9]*){1,3}$ 或 ^\+?[1-9][0-9]*$
12 非零的负整数：	^\-[1-9][]0-9"*$ 或 ^-[1-9]\d*$
13 非负整数：	^\d+$ 或 ^[1-9]\d*|0$
14 非正整数：	^-[1-9]\d*|0$ 或 ^((-\d+)|(0+))$
15 非负浮点数：	^\d+(\.\d+)?$ 或 ^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$
16 非正浮点数：	^((-\d+(\.\d+)?)|(0+(\.0+)?))$ 或 ^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$
17 正浮点数：	^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$ 或 ^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$
18 负浮点数：	^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$ 或 ^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$
19 浮点数：		^(-?\d+)(\.\d+)?$ 或 ^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$


校验字符的表达式
1 汉字：^[\u4e00-\u9fa5]{0,}$
2 英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$
3 长度为3-20的所有字符：^.{3,20}$
4 由26个英文字母组成的字符串：^[A-Za-z]+$
5 由26个大写英文字母组成的字符串：^[A-Z]+$
6 由26个小写英文字母组成的字符串：^[a-z]+$
7 由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$
8 由数字、26个英文字母或者下划线组成的字符串：^\w+$ 或 ^\w{3,20}$
9 中文、英文、数字包括下划线：^[\u4E00-\u9FA5A-Za-z0-9_]+$
10 中文、英文、数字但不包括下划线等符号：^[\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]{2,20}$
11 可以输入含有^%&',;=?$\"等字符：[^%&',;=?$\x22]+
12 禁止输入含有~的字符：[^~\x22]+


特殊需求表达式
1 Email地址：^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$
2 域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?
3 InternetURL：[a-zA-z]+://[^\s]* 或 ^http://([\w-]+\.)+[\w-]+(/[\w-./?%&=]*)?$
4 手机号码：^(13[0-9]|14[0-9]|15[0-9]|166|17[0-9]|18[0-9]|19[8|9])\d{8}$
5 电话号码("XXX-XXXXXXX"、"XXXX-XXXXXXXX"、"XXX-XXXXXXX"、"XXX-XXXXXXXX"、"XXXXXXX"和"XXXXXXXX)：^(\(\d{3,4}-)|\d{3.4}-)?\d{7,8}$ 
6 国内电话号码(0511-4405222、021-87888822)：\d{3}-\d{8}|\d{4}-\d{7} 
7 18位身份证号码(数字、字母x结尾)：^((\d{18})|([0-9x]{18})|([0-9X]{18}))$
8 帐号是否合法(字母开头,允许5-16字节,允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$
9 密码(以字母开头,长度在6~18之间,只能包含字母、数字和下划线)：^[a-zA-Z]\w{5,17}$
10 强密码(必须包含大小写字母和数字的组合,不能使用特殊字符,长度在8-10之间)：^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$  
11 日期格式：^\d{4}-\d{1,2}-\d{1,2}
12 一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$
13 一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$ 
14 钱的输入格式：
15    1.有四种钱的表示形式我们可以接受:"10000.00" 和 "10,000.00", 和没有 "分" 的 "10000" 和 "10,000"：^[1-9][0-9]*$ 
16    2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符"0"不通过,所以我们采用下面的形式：^(0|[1-9][0-9]*)$ 
17    3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0|-?[1-9][0-9]*)$ 
18    4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$ 
19    5.必须说明的是,小数点后面至少应该有1位数,所以"10."是不通过的,但是 "10" 和 "10.2" 是通过的：^[0-9]+(.[0-9]{2})?$ 
20    6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：^[0-9]+(.[0-9]{1,2})?$ 
21    7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$ 
22    8.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$ 
23    备注：这就是最终结果了,别忘了"+"可以用"*"替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里
24 xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$
25 中文字符的正则表达式：[\u4e00-\u9fa5]
26 双字节字符：[^\x00-\xff]    (包括汉字在内,可以用来计算字符串的长度(一个双字节字符长度计2,ASCII字符计1))
27 空白行的正则表达式：\n\s*\r    (可以用来删除空白行)
28 HTML标记的正则表达式：<(\S*?)[^>]*>.*?</\1>|<.*? />    (网上流传的版本太糟糕,上面这个也仅仅能部分,对于复杂的嵌套标记依旧无能为力)
29 首尾空白字符的正则表达式：^\s*|\s*$或(^\s*)|(\s*$)    (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等),非常有用的表达式)
30	匹配腾讯QQ号：	[1-9]\d{4,}    				(腾讯QQ号从10000开始)							匹配解释：1到9匹配一次，剩下0-9匹配4到n次
31	中国邮政编码：	[1-9]\d{5}(?!\d)    		(中国邮政编码为6位数字)
32	IP地址：	\d+\.\d+\.\d+\.\d+    			(提取IP地址时有用)
33	IP地址：	((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))


\n 换行
\r 回车
\t tab

1、匹配  单引号			'.*'				例如： 'hj3hrj3h43jg43h' and 'k4j5j4h44'		匹配解释： 匹配一个'    后面匹配任意字符0到n个   结尾匹配后面第一次出现'
2、匹配  ,?,?,?		\?[,\\?]{1,},\?			例如： t.dataset in (?,?,?,?,?,?,?)			匹配解释：匹配一个？  后面紧接着  要么，要么？  匹配1到n次  结尾匹配后面第一次出现   ，？




